{
  "hash": "1bb60b15aead6593d378cd5233997345",
  "result": {
    "markdown": "---\ntitle: \"Exploring quarto\"\nsubtitle: \"Baby steps into the quartoverse\"\nauthor: \"Allison Horst\"\ndate: \"2022-04-09\"\nexecute:\n  warning: false\n  message: false\n---\n\n## Getting started\n\nFirst, let's create a new project and note some interesting differences (from .Rmd-verse).\n\n1.  Restart RStudio\n2.  New Project \\> New Quarto Project\n\n-   Note: the type of project that gets created\n-   Note: the document extension\n-   Note: Render button(instead of Knit)\n-   Go ahead & render the .qmd!\n\n## Add a new R code chunk\n\nNow let's write some code in our .qmd & see what's different. If we're working in RStudio, the shortcut to add an R code chunk in a .qmd is the same (and default expected language is R).\n\n-   Insert a new code chunk\n-   Attach the `tidyverse` package\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n## Code chunk options - the hashpipe\n\nWe may want to hide some code chunk options. We can use the \"hashpipe\" `#|` to set code chunk options. For example, in the code chunk we just wrote, let's add the following:\n\n-   `#| warning: false`\n-   `#| message: false`\n\nThe other code chunk options we use (e.g. `echo`, `include`, `eval`) work similarly. Feel free to try them out!\n\n## Global options\n\nUpdate global options for code chunk execution in the front matter (up in the .qmd where the `title:`) is. That'll look something like this:\n\n```{r}}\n---\ntitle: \"Exploring quarto\"\nexecution: \n  warning: false\n  message: false\n---\n```\n\nSee more on execution options here: https://quarto.org/docs/computations/execution-options.html\n\n## Outputs\n\nSo things seem pretty similar to .Rmd so far. Let's keep going with a little graph, then render.\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mtcars, aes(x = wt, y = mpg)) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](quarto_demo_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\nNo surprises there! So what's new?\n\nWe can set options for outputs globally or within individual chunks (start figure labels with `fig-`...we'll see why in a bit.\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = faithful, aes(x = waiting)) +\n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![Waiting time between Old Faithful eruptions.](quarto_demo_files/figure-html/fig-faithful-1.png){#fig-faithful fig-alt='Histogram showing the distribution of waiting times between Old Faithful eruptions. The distribution is bimodal, with a shorter duration peak around 55 minutes and a longer duration peak around 80 minutes.' width=672}\n:::\n:::\n\n## But also you can just work in other languages:\n\n::: {.cell}\n\n```{.python .cell-code}\nimport seaborn as sns\n\ndf = sns.load_dataset(\"penguins\")\nsns.pairplot(df, hue = \"species\")\n```\n\n::: {.cell-output-display}\n![](quarto_demo_files/figure-html/unnamed-chunk-4-1.png){width=556}\n:::\n:::\n\nYou can set code chunk execution options in Python (or other language) chunks the same way (using the hashpipe `#|`). \n\n## Some sugar\n\n-   Check out the formatting when you add `author: \"Name\"` and `date: \"XXXX-XX-XX\"` to the front matter...pretty nice auto-formatting!\n-   Cross-referencing (of figures and more!):\n\nSee @fig-faithful for a cool histogram.\n\n- Learn more! [Quarto guide](https://quarto.org/docs/guide/)",
    "supporting": [
      "quarto_demo_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": [],
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}